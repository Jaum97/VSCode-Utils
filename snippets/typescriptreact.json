{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	//// }
	"create default view component": {
		"prefix": "dfview",
		"body": [
			"import React, { Fragment } from 'react'",
			"\nimport { IViewProps } from './types'",
			"\nimport {$3} from './styles'",
			"\nfunction $1(props: IViewProps): JSX.Element {",
			"\tconst {$2} = props",
			"\n\treturn (",
			"\t\t<Fragment>",
			"\t\t\t$4",
			"\t\t</Fragment>",
			"\t)",
			"}",
			"\nexport default $1"
		]
	},
	"create default handler": {
		"prefix": "dfhandler",
		"body": [
			"function handle$1(): void {",
			"\t$2",
			"}"
		]
	},
	"create default useEffect": {
		"prefix": "dfeffect",
		"body": [
			"function handle$1(): void {",
			"\t$3",
			"}",
			"\nuseEffect(handle$1, [$2])"
		]
	},
	"create default useState": {
		"prefix": "dfstate",
		"body": "const [$1,set$1] = useState$3($2)",
	},
	"destructure default props": {
		"prefix": "dfdes",
		"body": "const { $1 } = props",
	},
}
